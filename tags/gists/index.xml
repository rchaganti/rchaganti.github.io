<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gists on Ravikanth Chaganti</title>
    <link>https://ravichaganti.com/tags/gists/</link>
    <description>Recent content in Gists on Ravikanth Chaganti</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 16 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ravichaganti.com/tags/gists/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How I use GitHub Gists to store and display code snippets in blog posts</title>
      <link>https://ravichaganti.com/blog/how-i-use-gists-to-store-and-display-code-snippets-in-blog-posts/</link>
      <pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ravichaganti.com/blog/how-i-use-gists-to-store-and-display-code-snippets-in-blog-posts/</guid>
      <description>&lt;p&gt;After I moved to a static site hosted on GitHub Pages, I was looking at different options to share the code snippets in a better way. With the Hugo generated static pages, there are a few options for code sharing in an article.&lt;/p&gt;
&lt;p&gt;You can use the simple pre-formatted text in markdown. This is usually done by enclosing code snippet in ```. This appears (in Hugo Coder theme I am using) as a big black block and has no way to choose the right syntax highlighting based on what programming language the snippet is written in. There are no line numbers or no highlighting of lines in a code snippet and so on.&lt;/p&gt;
&lt;p&gt;The second method involves Hugo&amp;rsquo;s default &lt;a href=&#34;https://gohugo.io/content-management/syntax-highlighting/&#34;&gt;Highlight shortcode&lt;/a&gt;. This is a good method that supports line numbers, language type, and line highlights. But, the only shortcoming is that I have to now store the code snippet locally in the same static page. So, if I need to update the code snippet, I end up updating the static page itself.&lt;/p&gt;
&lt;p&gt;So, wanted to explore something better and then I found the &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#gist&#34;&gt;Gist shortcode&lt;/a&gt; in Hugo. Using this shortcode, you can embed a GitHub Gist on a static page. This seemed like a good fit for me since I get the line numbers, language based syntax highlighting, and nothing saved locally in the static page. However, for adding the code snippets as Gists, I first need to upload the Gist and then use it in my article. For this, I need to navigate to the GitHub site and then return once I am done uploading Gists. This is where I found &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=vsls-contrib.gistfs&#34;&gt;GistPad VS Code extension&lt;/a&gt; quite helpful. With this extension in place, I can now create/update/delete Gists right inside VS Code where I am writing all the markdown content for the articles. So, I never have to leave VS Code. Here is how it appears in VS Code.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://ravichaganti.com/images/vscodegist.png&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;As you see in the screenshot, I can group all Gists that belong a specific article or category and then simply use them here in an article. With this integration, I simply write all code as a Gist and then use the following syntax to make it appear here.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/rchaganti/056a02f289d7d5415c17d27082ee753b.js?file=gistshortcode&#34;&gt;&lt;/script&gt;

&lt;p&gt;Simple. I will be using this method of sharing code snippets within an upcoming article series. Stay tuned.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
