<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GitHub on Ravikanth Chaganti</title>
    <link>https://ravichaganti.com/tags/github/</link>
    <description>Recent content in GitHub on Ravikanth Chaganti</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 16 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ravichaganti.com/tags/github/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How I use GitHub Gists to store and display code snippets in blog posts</title>
      <link>https://ravichaganti.com/blog/how-i-use-gists-to-store-and-display-code-snippets-in-blog-posts/</link>
      <pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ravichaganti.com/blog/how-i-use-gists-to-store-and-display-code-snippets-in-blog-posts/</guid>
      <description>&lt;p&gt;After I moved to a static site hosted on GitHub Pages, I was looking at different options to share the code snippets in a better way. With the Hugo generated static pages, there are a few options for code sharing in an article.&lt;/p&gt;
&lt;p&gt;You can use the simple pre-formatted text in markdown. This is usually done by enclosing code snippet in ```. This appears (in Hugo Coder theme I am using) as a big black block and has no way to choose the right syntax highlighting based on what programming language the snippet is written in. There are no line numbers or no highlighting of lines in a code snippet and so on.&lt;/p&gt;
&lt;p&gt;The second method involves Hugo&amp;rsquo;s default &lt;a href=&#34;https://gohugo.io/content-management/syntax-highlighting/&#34;&gt;Highlight shortcode&lt;/a&gt;. This is a good method that supports line numbers, language type, and line highlights. But, the only shortcoming is that I have to now store the code snippet locally in the same static page. So, if I need to update the code snippet, I end up updating the static page itself.&lt;/p&gt;
&lt;p&gt;So, wanted to explore something better and then I found the &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#gist&#34;&gt;Gist shortcode&lt;/a&gt; in Hugo. Using this shortcode, you can embed a GitHub Gist on a static page. This seemed like a good fit for me since I get the line numbers, language based syntax highlighting, and nothing saved locally in the static page. However, for adding the code snippets as Gists, I first need to upload the Gist and then use it in my article. For this, I need to navigate to the GitHub site and then return once I am done uploading Gists. This is where I found &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=vsls-contrib.gistfs&#34;&gt;GistPad VS Code extension&lt;/a&gt; quite helpful. With this extension in place, I can now create/update/delete Gists right inside VS Code where I am writing all the markdown content for the articles. So, I never have to leave VS Code. Here is how it appears in VS Code.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://ravichaganti.com/images/vscodegist.png&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;As you see in the screenshot, I can group all Gists that belong a specific article or category and then simply use them here in an article. With this integration, I simply write all code as a Gist and then use the following syntax to make it appear here.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/rchaganti/056a02f289d7d5415c17d27082ee753b.js?file=gistshortcode&#34;&gt;&lt;/script&gt;

&lt;p&gt;Simple. I will be using this method of sharing code snippets within an upcoming article series. Stay tuned.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Moved Blog to a Static Site Using Hugo and GitHub Pages</title>
      <link>https://ravichaganti.com/blog/moved-to-static-site-using-hugo-and-github-pages/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ravichaganti.com/blog/moved-to-static-site-using-hugo-and-github-pages/</guid>
      <description>&lt;figure&gt;
    &lt;img src=&#34;https://ravichaganti.com/images/welcome.jpg&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;It has been a while since I wrote something here. I was using a Digital Ocean droplet to run this blog using self-hosted version of Wordpress. Overall, it was good experience but there are issues with Wordpress installs. While it allows greater levels of customization, when all you need is just sharing your ideas, it becomes rather heavy. Also, the recent vulnerabilities made me think about it again. While I was having this thought process, I came across a few sites hosted on GitHub pages using Jekyll and simple static pages. I really wanted to move but moving from Wordpress to static site isn&amp;rsquo;t an easy option. There are Wordpress &lt;a href=&#34;https://ma.ttias.be/step-by-step-guide-migrating-wordpress-to-hugo/&#34;&gt;plugins available to export&lt;/a&gt; to markdown format and then host the same on GitHub pages. This is done using &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. While, on paper, it looks very easy job, it is actually not. The exported markdown files won&amp;rsquo;t be compatible with your selected &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;Hugo theme&lt;/a&gt;. As I was wondering about this whole process, &lt;a href=&#34;https://twitter.com/ChendrayanV&#34;&gt;Chen&lt;/a&gt; came to the rescue and gave me a head start. After reviewing what he sent and doing some more research, I decided to build the site from scratch.&lt;/p&gt;
&lt;p&gt;So, welcome to the new home. In the process of migrating to Hugo+GitHub Pages, I decided to drop some old content from the blog and export what was most visited through last few years. I have moved three most important series of articles I wrote here.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://ravichaganti.com/series/arm-templates/&#34;&gt;Authoring Azure Resource Manager Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ravichaganti.com/series/powershell-remoting/&#34;&gt;PowerShell Remoting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ravichaganti.com/series/wql-via-powershell/&#34;&gt;WMI Query Language (WQL) via PowerShell&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I have archived most of the other content and will try to bring it in slowly when I get some free time. Believe me. It is a lot of work bringing in old content into the markdown format. The images need to be moved, links need to be corrected, and code needs to be formatted again based on what type of syntax highlighter you were using.&lt;/p&gt;
&lt;p&gt;Anyway, I just fell in love with this new look and the way it makes my life easy. I have been writing in markdown for a while and I feel so comfortable doing it. I hope this move helps me write more and share my thoughts.&lt;/p&gt;
&lt;p&gt;I am also in the process of moving PowerShell Magazine to a static site but that is much more complex than a simple blog like mine. But, yes, I certainly want to make it easy for our contributing authors.&lt;/p&gt;
&lt;p&gt;Are you using a static site as well? What is your experience?&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
