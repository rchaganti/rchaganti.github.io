<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on Ravikanth Chaganti</title>
    <link>https://ravichaganti.com/categories/hugo/</link>
    <description>Recent content in Hugo on Ravikanth Chaganti</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 14 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ravichaganti.com/categories/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Embedding Channel9 Videos in Hugo Static Pages</title>
      <link>https://ravichaganti.com/blog/embedding-channel9-videos-in-hugo-static-pages/</link>
      <pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ravichaganti.com/blog/embedding-channel9-videos-in-hugo-static-pages/</guid>
      <description>&lt;p&gt;I have been trying a few things with my new blogging platform here and in the preparation for a new series of articles, I wanted the ability to embed &lt;a href=&#34;https://channel9.msdn.com/&#34;&gt;Channel9&lt;/a&gt; videos. This is Hugo platform! So, it was not a big deal. I just had to create another &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/&#34;&gt;shortcode&lt;/a&gt; like the one I created for &lt;a href=&#34;https://ravichaganti.com/blog/adding-azdeploy-button-in-static-pages-using-hugo/&#34;&gt;Deploy to Azure button&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is the code for the shortcode.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/rchaganti/056a02f289d7d5415c17d27082ee753b.js?file=channel9.html&#34;&gt;&lt;/script&gt;

&lt;p&gt;You can save this as channel9.html under the layouts/shortcode folder of your site content. And, then use this shortcode as shown here.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/rchaganti/056a02f289d7d5415c17d27082ee753b.js?file=channel9use&#34;&gt;&lt;/script&gt;

&lt;p&gt;You can use either of the methods shown above. The first one uses an named parameter while the second one avoids named parameter specification. Here is how the embed appears on the static page.&lt;/p&gt;

    &lt;center&gt;
        &lt;iframe
            src=&#34;https://channel9.msdn.com/Events/Build/2020/KEY01/player&#34;
            width=&#34;640&#34;
            height=&#34;360&#34;
            frameBorder=&#34;0&#34;
            allowfullscreen=&#34;true&#34;&gt;
        &lt;/iframe&gt;
    &lt;/center&gt;
    &lt;br /&gt;


&lt;p&gt;It is good to be writing here again! Can&amp;rsquo;t wait to start publishing the new series of articles that I am writing now. Stay tuned!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo shortcode for Deploy to Azure Button in a Static Page</title>
      <link>https://ravichaganti.com/blog/adding-azdeploy-button-in-static-pages-using-hugo/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ravichaganti.com/blog/adding-azdeploy-button-in-static-pages-using-hugo/</guid>
      <description>&lt;p&gt;As I moved to this new implementation of the blog using Hugo and GitHub pages, I decided to move older article &lt;a href=&#34;https://ravichaganti.com/series/arm-templates/&#34;&gt;series around authoring Azure Resource Manager templates&lt;/a&gt;. This series was one of the most visited ones on this blog. This series provided an incremental way to learn how to author ARM templates and deploy these ARM templates. In each of these articles, I added a &amp;ldquo;&lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/deploy-to-azure-button&#34;&gt;Deploy to Azure Button&lt;/a&gt;&amp;rdquo; that you could just click and open the template directly in Azure Portal ready for deployment. The code behind this button usually looks like this.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/rchaganti/056a02f289d7d5415c17d27082ee753b.js?file=azdeployurl&#34;&gt;&lt;/script&gt;

&lt;p&gt;As I moved to static page generation using Hugo, I looked around to see if there was an easy way to generate the above HTML snippet. I came across the feature called &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/&#34;&gt;shortcodes in Hugo&lt;/a&gt;. This allows you to embed shortcodes for YouTube videos, images, and so on. Several articles that I moved to this new site use shortcodes. And, it is not too difficult to &lt;a href=&#34;https://gohugo.io/templates/shortcode-templates/&#34;&gt;write your own shortcode&lt;/a&gt;. So, I decided to write one for AzDeploy button.&lt;/p&gt;
&lt;p&gt;First, you need a shortcode template.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/rchaganti/056a02f289d7d5415c17d27082ee753b.js?file=azdeploy.html&#34;&gt;&lt;/script&gt;

&lt;p&gt;I will spare an explanation of this and you can read the documentation of custom shortcodes. But, this is no rocket science. The way you use this shortcode in markdown is simple. You can use either of the methods shown below.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/rchaganti/056a02f289d7d5415c17d27082ee753b.js?file=azdeployuse&#34;&gt;&lt;/script&gt;

&lt;p&gt;This is it really. If you put that above code in the markdown and generate the static page, you will see the Deploy to Azure button appear like this.&lt;/p&gt;

    &lt;a href=&#34;https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2F101-storage-account-create%2Fazuredeploy.json&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://azuredeploy.net/deploybutton.png&#34; alt=&#34;&#34;&gt;
    &lt;/a&gt;
    &lt;br /&gt;

&lt;p&gt;Simple and straightforward. I really fell in love with Hugo and static site generation. This has a lot of ways to customize and way faster than any other framework I used so far.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Moved Blog to a Static Site Using Hugo and GitHub Pages</title>
      <link>https://ravichaganti.com/blog/moved-to-static-site-using-hugo-and-github-pages/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ravichaganti.com/blog/moved-to-static-site-using-hugo-and-github-pages/</guid>
      <description>&lt;figure&gt;
    &lt;img src=&#34;https://ravichaganti.com/images/welcome.jpg&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;It has been a while since I wrote something here. I was using a Digital Ocean droplet to run this blog using self-hosted version of Wordpress. Overall, it was good experience but there are issues with Wordpress installs. While it allows greater levels of customization, when all you need is just sharing your ideas, it becomes rather heavy. Also, the recent vulnerabilities made me think about it again. While I was having this thought process, I came across a few sites hosted on GitHub pages using Jekyll and simple static pages. I really wanted to move but moving from Wordpress to static site isn&amp;rsquo;t an easy option. There are Wordpress &lt;a href=&#34;https://ma.ttias.be/step-by-step-guide-migrating-wordpress-to-hugo/&#34;&gt;plugins available to export&lt;/a&gt; to markdown format and then host the same on GitHub pages. This is done using &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. While, on paper, it looks very easy job, it is actually not. The exported markdown files won&amp;rsquo;t be compatible with your selected &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;Hugo theme&lt;/a&gt;. As I was wondering about this whole process, &lt;a href=&#34;https://twitter.com/ChendrayanV&#34;&gt;Chen&lt;/a&gt; came to the rescue and gave me a head start. After reviewing what he sent and doing some more research, I decided to build the site from scratch.&lt;/p&gt;
&lt;p&gt;So, welcome to the new home. In the process of migrating to Hugo+GitHub Pages, I decided to drop some old content from the blog and export what was most visited through last few years. I have moved three most important series of articles I wrote here.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://ravichaganti.com/series/arm-templates/&#34;&gt;Authoring Azure Resource Manager Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ravichaganti.com/series/powershell-remoting/&#34;&gt;PowerShell Remoting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ravichaganti.com/series/wql-via-powershell/&#34;&gt;WMI Query Language (WQL) via PowerShell&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I have archived most of the other content and will try to bring it in slowly when I get some free time. Believe me. It is a lot of work bringing in old content into the markdown format. The images need to be moved, links need to be corrected, and code needs to be formatted again based on what type of syntax highlighter you were using.&lt;/p&gt;
&lt;p&gt;Anyway, I just fell in love with this new look and the way it makes my life easy. I have been writing in markdown for a while and I feel so comfortable doing it. I hope this move helps me write more and share my thoughts.&lt;/p&gt;
&lt;p&gt;I am also in the process of moving PowerShell Magazine to a static site but that is much more complex than a simple blog like mine. But, yes, I certainly want to make it easy for our contributing authors.&lt;/p&gt;
&lt;p&gt;Are you using a static site as well? What is your experience?&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
